@page "/cart"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Carrello</PageTitle>

<div class="cart-container">
    @if (CartService.ItemsCount == 0)
    {
        <div class="empty-cart">
            <div class="empty-icon">🛒</div>
            <h2>Il tuo carrello è vuoto</h2>
            <p>Aggiungi alcuni quadri per iniziare i tuoi acquisti</p>
            <button class="btn primary" @onclick="NavigateToGallery">
                Esplora la galleria
            </button>
        </div>
    }
    else
    {
        <div class="cart-content">
            <!-- Cart Items -->
            <div class="cart-items">
                <div class="cart-header">
                    <h1>Il tuo carrello</h1>
                    <span class="item-count">@CartService.ItemsCount @(CartService.ItemsCount == 1 ? "articolo" : "articoli")</span>
                </div>

                <div class="items-list">
                    @foreach (var item in CartService.Items)
                    {
                        <div class="cart-item">
                            <div class="item-image">
                                <img src="@($"{Configuration["BaseUrl"]}/{item.ImageUrls.FirstOrDefault()}")" alt="@item.Title" />
                            </div>
                            <div class="item-details">
                                <h3>@item.Title</h3>
                                @if (!string.IsNullOrWhiteSpace(item.Description))
                                {
                                    <p class="item-description">@item.Description</p>
                                }
                                <div class="item-meta">
                                    @if (item.Year.HasValue)
                                    {
                                        <span>@item.Year</span>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(item.Medium))
                                    {
                                        <span>@item.Medium</span>
                                    }
                                </div>
                            </div>
                            <div class="item-price">
                                @if (item.Price.HasValue)
                                {
                                    <span class="price">@item.Price.Value.ToString("C")</span>
                                }
                                else
                                {
                                    <span class="price-na">Prezzo da concordare</span>
                                }
                            </div>
                            <button class="remove-btn" @onclick="() => RemoveFromCart(item.Id)" title="Rimuovi dal carrello">
                                <svg viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                </svg>
                            </button>
                        </div>
                    }
                </div>
            </div>

            <!-- Checkout Form -->
            <div class="checkout-section">
                <div class="checkout-card">
                    <h2>Completa il tuo ordine</h2>
                    
                    <EditForm Model="@_checkoutModel" OnValidSubmit="ProceedToPayment">
                        <DataAnnotationsValidator />
                        
                        <!-- Informazioni personali -->
                        <div class="form-section">
                            <h3>Informazioni personali</h3>
                            <div class="form-row">
                                <div class="form-group">
                                    <label>Nome *</label>
                                    <InputText @bind-Value="_checkoutModel.FirstName" class="form-control" placeholder="Il tuo nome" />
                                    <ValidationMessage For="@(() => _checkoutModel.FirstName)" />
                                </div>
                                <div class="form-group">
                                    <label>Cognome *</label>
                                    <InputText @bind-Value="_checkoutModel.LastName" class="form-control" placeholder="Il tuo cognome" />
                                    <ValidationMessage For="@(() => _checkoutModel.LastName)" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Email *</label>
                                <InputText @bind-Value="_checkoutModel.Email" class="form-control" type="email" placeholder="la-tua@email.com" />
                                <ValidationMessage For="@(() => _checkoutModel.Email)" />
                            </div>
                        </div>

                        <!-- Indirizzo di spedizione -->
                        <div class="form-section">
                            <h3>Indirizzo di spedizione</h3>
                            <div class="form-group">
                                <label>Indirizzo *</label>
                                <InputText @bind-Value="_checkoutModel.AddressLine" class="form-control" placeholder="Via, numero civico" />
                                <ValidationMessage For="@(() => _checkoutModel.AddressLine)" />
                            </div>
                            <div class="form-row">
                                <div class="form-group">
                                    <label>Città *</label>
                                    <InputText @bind-Value="_checkoutModel.City" class="form-control" placeholder="La tua città" />
                                    <ValidationMessage For="@(() => _checkoutModel.City)" />
                                </div>
                                <div class="form-group">
                                    <label>CAP *</label>
                                    <InputText @bind-Value="_checkoutModel.PostalCode" class="form-control" placeholder="12345" />
                                    <ValidationMessage For="@(() => _checkoutModel.PostalCode)" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Paese *</label>
                                <InputSelect @bind-Value="_checkoutModel.Country" class="form-control" @onchange="OnCountryChange">
                                    <option value="">Seleziona il paese</option>
                                    <option value="Italia">Italia</option>
                                    <option value="Francia">Francia</option>
                                    <option value="Germania">Germania</option>
                                    <option value="Spagna">Spagna</option>
                                    <option value="Svizzera">Svizzera</option>
                                    <option value="Austria">Austria</option>
                                    <option value="Altro">Altro paese europeo</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => _checkoutModel.Country)" />
                            </div>
                        </div>

                        <!-- Metodo di spedizione -->
                        @if (!string.IsNullOrEmpty(_checkoutModel.Country))
                        {
                            <div class="form-section">
                                <h3>Metodo di spedizione</h3>
                                <div class="shipping-options">
                                    <label class="shipping-option @(selectedShipping == "Standard" ? "selected" : "")" @onclick="@(() => SelectShipping("Standard"))">
                                        <input type="radio" name="shipping" value="Standard" @onchange="@(() => _checkoutModel.ShippingMethod = "Standard")" checked="@(_checkoutModel.ShippingMethod == "Standard")" />
                                        <div class="shipping-info">
                                            <div class="shipping-name">Spedizione Standard</div>
                                            <div class="shipping-time">5-7 giorni lavorativi</div>
                                        </div>
                                        <div class="shipping-price">@GetShippingCost("Standard").ToString("C")</div>
                                    </label>
                                    <label class="shipping-option @(selectedShipping == "Express" ? "selected" : "")" @onclick="@(() => SelectShipping("Express"))">
                                        <input type="radio" name="shipping" value="Express" @onchange="@(() => _checkoutModel.ShippingMethod = "Express")" checked="@(_checkoutModel.ShippingMethod == "Express")" />
                                        <div class="shipping-info">
                                            <div class="shipping-name">Spedizione Express</div>
                                            <div class="shipping-time">2-3 giorni lavorativi</div>
                                        </div>
                                        <div class="shipping-price">@GetShippingCost("Express").ToString("C")</div>
                                    </label>
                                </div>
                                <ValidationMessage For="@(() => _checkoutModel.ShippingMethod)" />
                            </div>
                        }

                        <!-- Riepilogo ordine -->
                        <div class="order-summary">
                            <h3>Riepilogo ordine</h3>
                            <div class="summary-line">
                                <span>Subtotale (@CartService.ItemsCount articoli)</span>
                                <span>@CartService.TotalAmount.ToString("C")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(_checkoutModel.ShippingMethod))
                            {
                                <div class="summary-line">
                                    <span>Spedizione (@_checkoutModel.ShippingMethod)</span>
                                    <span>@GetShippingCost(_checkoutModel.ShippingMethod).ToString("C")</span>
                                </div>
                            }
                            <div class="summary-line total">
                                <span>Totale</span>
                                <span>@GetTotalWithShipping().ToString("C")</span>
                            </div>
                        </div>

                        <!-- Termini e condizioni -->
                        <div class="form-section">
                            <label class="checkbox-container">
                                <InputCheckbox @bind-Value="_checkoutModel.TermsAccepted" />
                                <span class="checkmark"></span>
                                <span class="checkbox-text">
                                    Accetto i <a href="#" @onclick:preventDefault="true" @onclick="ShowTerms">termini e condizioni</a> e la privacy policy
                                </span>
                            </label>
                            <ValidationMessage For="@(() => _checkoutModel.TermsAccepted)" />
                        </div>

                        <!-- Pulsante checkout -->
                        <button type="submit" class="btn primary large checkout-btn" disabled="@(!CanProceed())">
                            <span class="btn-content">
                                <svg class="btn-icon" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.031 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                                </svg>
                                Procedi al pagamento sicuro
                            </span>
                        </button>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="error-message">
                                @errorMessage
                            </div>
                        }
                    </EditForm>

                    <div class="payment-security">
                        <div class="security-badges">
                            <span class="security-badge">🔒 Pagamento sicuro</span>
                            <span class="security-badge">💳 Stripe</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (showTermsModal)
{
    <div class="modal-overlay" @onclick="HideTerms">
        <div class="modal terms-modal" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h2>Termini e Condizioni</h2>
                <button class="btn-close" @onclick="HideTerms">✕</button>
            </div>
            <div class="modal-body">
                <p>I termini e condizioni verranno visualizzati qui...</p>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
            </div>
            <div class="modal-footer">
                <button class="btn primary" @onclick="AcceptTerms">Accetto</button>
                <button class="btn secondary" @onclick="HideTerms">Chiudi</button>
            </div>
        </div>
    </div>
}